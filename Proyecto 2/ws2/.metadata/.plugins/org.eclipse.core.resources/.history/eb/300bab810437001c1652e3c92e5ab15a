<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="es">
<head>
<!-- Generated by javadoc (15) on Wed Oct 20 18:11:00 CEST 2021 -->
<title>GraphTests</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="dc.created" content="2021-10-20">
<meta name="description" content="declaration: package: p2Grafos, class: GraphTests">
<meta name="generator" content="javadoc/ClassWriterImpl">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../script-dir/jquery-ui.min.css" title="Style">
<link rel="stylesheet" type="text/css" href="../jquery-ui.overrides.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
<script type="text/javascript" src="../script-dir/jquery-3.5.1.min.js"></script>
<script type="text/javascript" src="../script-dir/jquery-ui.min.js"></script>
</head>
<body class="class-declaration-page">
<script type="text/javascript">var data = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10,"i25":10,"i26":10,"i27":10,"i28":10,"i29":10,"i30":10,"i31":10,"i32":10,"i33":10,"i34":10,"i35":10,"i36":10,"i37":10,"i38":10,"i39":10,"i40":10,"i41":10,"i42":10,"i43":10,"i44":10,"i45":10,"i46":10,"i47":10,"i48":10,"i49":10,"i50":10,"i51":10,"i52":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "alt-color";
var rowColor = "row-color";
var tableTab = "table-tab";
var activeTableTab = "active-table-tab";
var pathtoroot = "../";
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<div class="flex-box">
<header role="banner" class="flex-header">
<nav role="navigation">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="top-nav" id="navbar.top">
<div class="skip-nav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<ul id="navbar.top.firstrow" class="nav-list" title="Navigation">
<li><a href="../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="nav-bar-cell1-rev">Class</li>
<li><a href="class-use/GraphTests.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="sub-nav">
<div>
<ul class="sub-nav-list">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="sub-nav-list">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<div class="nav-list-search"><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</div>
</div>
<!-- ========= END OF TOP NAVBAR ========= -->
<span class="skip-nav" id="skip.navbar.top">
<!--   -->
</span></nav>
</header>
<div class="flex-content">
<main role="main">
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="sub-title"><span class="package-label-in-type">Package</span>&nbsp;<a href="package-summary.html">p2Grafos</a></div>
<h1 title="Class GraphTests" class="title">Class GraphTests</h1>
</div>
<div class="inheritance" title="Inheritance Tree">java.lang.Object
<div class="inheritance">p2Grafos.GraphTests</div>
</div>
<section class="description">
<hr>
<pre>public class <span class="type-name-label">GraphTests</span>
extends java.lang.Object</pre>
<div class="block">Titulo: Clase GraphTests</div>
<dl class="notes">
<dt>Version:</dt>
<dd>24/09/2021</dd>
<dt>Author:</dt>
<dd>UO281847</dd>
</dl>
</section>
<section class="summary">
<ul class="summary-list">
<!-- =========== FIELD SUMMARY =========== -->
<li>
<section class="field-summary" id="field.summary">
<h2>Field Summary</h2>
<div class="member-summary">
<table class="summary-table">
<caption><span>Fields</span></caption>
<thead>
<tr>
<th class="col-first" scope="col">Modifier and Type</th>
<th class="col-second" scope="col">Field</th>
<th class="col-last" scope="col">Description</th>
</tr>
</thead>
<tbody>
<tr class="alt-color">
<td class="col-first"><code>private <a href="Graph.html" title="class in p2Grafos">Graph</a>&lt;java.lang.Integer&gt;</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#g">g</a></span></code></th>
<td class="col-last">
<div class="block">Atributo g</div>
</td>
</tr>
<tr class="row-color">
<td class="col-first"><code>private static double</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#infinite">infinite</a></span></code></th>
<td class="col-last">
<div class="block">Constante infinite</div>
</td>
</tr>
</tbody>
</table>
</div>
</section>
</li>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<li>
<section class="constructor-summary" id="constructor.summary">
<h2>Constructor Summary</h2>
<div class="member-summary">
<table class="summary-table">
<caption><span>Constructors</span></caption>
<thead>
<tr>
<th class="col-first" scope="col">Constructor</th>
<th class="col-last" scope="col">Description</th>
</tr>
</thead>
<tbody>
<tr class="alt-color">
<th class="col-constructor-name" scope="row"><code><span class="member-name-link"><a href="#%3Cinit%3E()">GraphTests</a></span>()</code></th>
<td class="col-last">&nbsp;</td>
</tr>
</tbody>
</table>
</div>
</section>
</li>
<!-- ========== METHOD SUMMARY =========== -->
<li>
<section class="method-summary" id="method.summary">
<h2>Method Summary</h2>
<div class="member-summary" id="method-summary-table">
<div class="table-tabs" role="tablist" aria-orientation="horizontal"><button role="tab" aria-selected="true" aria-controls="method-summary-table.tabpanel" tabindex="0" onkeydown="switchTab(event)" id="t0" class="active-table-tab">All Methods</button><button role="tab" aria-selected="false" aria-controls="method-summary-table.tabpanel" tabindex="-1" onkeydown="switchTab(event)" id="t2" class="table-tab" onclick="show(2);">Instance Methods</button><button role="tab" aria-selected="false" aria-controls="method-summary-table.tabpanel" tabindex="-1" onkeydown="switchTab(event)" id="t4" class="table-tab" onclick="show(8);">Concrete Methods</button></div>
<div id="method-summary-table.tabpanel" role="tabpanel">
<table class="summary-table" aria-labelledby="t0">
<thead>
<tr>
<th class="col-first" scope="col">Modifier and Type</th>
<th class="col-second" scope="col">Method</th>
<th class="col-last" scope="col">Description</th>
</tr>
</thead>
<tbody>
<tr class="alt-color" id="i0">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#basicEdgeTest()">basicEdgeTest</a></span>()</code></th>
<td class="col-last">
<div class="block">Prueba básica de aristas</div>
</td>
</tr>
<tr class="row-color" id="i1">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#basicEvolutionTest()">basicEvolutionTest</a></span>()</code></th>
<td class="col-last">
<div class="block">Prueba básica de evolucion</div>
</td>
</tr>
<tr class="alt-color" id="i2">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#basicNodeTest()">basicNodeTest</a></span>()</code></th>
<td class="col-last">
<div class="block">Prueba básica de nodos</div>
</td>
</tr>
<tr class="row-color" id="i3">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testAddEdgeEdgeExist()">testAddEdgeEdgeExist</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método addEdge donde ya existe la arista</div>
</td>
</tr>
<tr class="alt-color" id="i4">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testAddEdgeEdgeExistsEdgeWeightError()">testAddEdgeEdgeExistsEdgeWeightError</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método addEdge donde ya existe la arista y el peso no es valido</div>
</td>
</tr>
<tr class="row-color" id="i5">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testAddEdgeEdgeWightError()">testAddEdgeEdgeWightError</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método addEdge donde el peso no es valido</div>
</td>
</tr>
<tr class="alt-color" id="i6">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testAddEdgeNormal()">testAddEdgeNormal</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método addEdge que no tiene errores</div>
</td>
</tr>
<tr class="row-color" id="i7">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testAddEdgeSourceDontExist()">testAddEdgeSourceDontExist</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método addEdge donde no existe el nodo origen</div>
</td>
</tr>
<tr class="alt-color" id="i8">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testAddEdgeSourceTargetError()">testAddEdgeSourceTargetError</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método addEdge donde no existen los nodos</div>
</td>
</tr>
<tr class="row-color" id="i9">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testAddEdgeTargetDontExist()">testAddEdgeTargetDontExist</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método addEdge donde no existe el nodo destino</div>
</td>
</tr>
<tr class="alt-color" id="i10">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testAddNodeAlreadyExists()">testAddNodeAlreadyExists</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método addNode cuando ya existe</div>
</td>
</tr>
<tr class="row-color" id="i11">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testAddNodeFirst()">testAddNodeFirst</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método addNode sin errores</div>
</td>
</tr>
<tr class="alt-color" id="i12">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testAddNodeFull()">testAddNodeFull</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método addNode cuando ya esta lleno</div>
</td>
</tr>
<tr class="row-color" id="i13">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testAddNodeNotValid()">testAddNodeNotValid</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método addNode con nodo no valido</div>
</td>
</tr>
<tr class="alt-color" id="i14">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testDijkstra4Node()">testDijkstra4Node</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método de Dijkstra con un grafo de 4 nodos</div>
</td>
</tr>
<tr class="row-color" id="i15">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testDijkstra5Node()">testDijkstra5Node</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método de Dijkstra con un grafo de 5 nodos</div>
</td>
</tr>
<tr class="alt-color" id="i16">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testDijkstra6Node()">testDijkstra6Node</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método de Dijkstra con un grafo de 6 nodos</div>
</td>
</tr>
<tr class="row-color" id="i17">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testDijkstra7Node()">testDijkstra7Node</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método de Dijkstra con un grafo de 7 nodos</div>
</td>
</tr>
<tr class="alt-color" id="i18">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testExistsEdgeBothDontExists()">testExistsEdgeBothDontExists</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método existsEdge donde no existen los nodos</div>
</td>
</tr>
<tr class="row-color" id="i19">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testExistsEdgeNormal()">testExistsEdgeNormal</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método existsEdge que no tiene errores</div>
</td>
</tr>
<tr class="alt-color" id="i20">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testExistsEdgeSourceDontExists()">testExistsEdgeSourceDontExists</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método existsEdge donde no existe el nodo origen</div>
</td>
</tr>
<tr class="row-color" id="i21">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testExistsEdgeTargetDontExists()">testExistsEdgeTargetDontExists</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método existsEdge donde no existe el nodo destino</div>
</td>
</tr>
<tr class="alt-color" id="i22">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testExistsNodeFalse()">testExistsNodeFalse</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método existsNode que devuelve true</div>
</td>
</tr>
<tr class="row-color" id="i23">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testExistsNodeOne()">testExistsNodeOne</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método existsNode que devuelve true</div>
</td>
</tr>
<tr class="alt-color" id="i24">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testExistsNodeVarious()">testExistsNodeVarious</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método existsNode que devuelve true</div>
</td>
</tr>
<tr class="row-color" id="i25">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testFloyd4Node()">testFloyd4Node</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método de Floyd con un grafo de 4 nodos</div>
</td>
</tr>
<tr class="alt-color" id="i26">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testFloyd5Node()">testFloyd5Node</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método de Floyd con un grafo de 5 nodos</div>
</td>
</tr>
<tr class="row-color" id="i27">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testFloyd6Node()">testFloyd6Node</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método de Floyd con un grafo de 6 nodos</div>
</td>
</tr>
<tr class="alt-color" id="i28">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testFloyd7Node()">testFloyd7Node</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método de Floyd con un grafo de 7 nodos</div>
</td>
</tr>
<tr class="row-color" id="i29">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testFloydNoNodes()">testFloydNoNodes</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método de Floyd con un grafo sin nodos</div>
</td>
</tr>
<tr class="alt-color" id="i30">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testGetEdgeBothDontExist()">testGetEdgeBothDontExist</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método getEdge donde no existen los nodos</div>
</td>
</tr>
<tr class="row-color" id="i31">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testGetEdgeEdgeDontExist()">testGetEdgeEdgeDontExist</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método getEdge donde existen los nodos y no la arista</div>
</td>
</tr>
<tr class="alt-color" id="i32">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testGetEdgeNormal()">testGetEdgeNormal</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método getEdge que no tiene errores</div>
</td>
</tr>
<tr class="row-color" id="i33">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testGetEdgeSourceDontExist()">testGetEdgeSourceDontExist</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método getEdge donde no existe el nodo origen</div>
</td>
</tr>
<tr class="alt-color" id="i34">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testGetEdgeTargetDontExist()">testGetEdgeTargetDontExist</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método getEdge donde no existe el nodo destino</div>
</td>
</tr>
<tr class="row-color" id="i35">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testGetNodeDontExists()">testGetNodeDontExists</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método getNode que devuelve -1</div>
</td>
</tr>
<tr class="alt-color" id="i36">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testGetNodeNormal()">testGetNodeNormal</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método getNode que devuelve la posición</div>
</td>
</tr>
<tr class="row-color" id="i37">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testGetNodeVarious()">testGetNodeVarious</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método getNode que devuelve la posición ya añadido</div>
</td>
</tr>
<tr class="alt-color" id="i38">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testMinCostPath7Nodes()">testMinCostPath7Nodes</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método minCostPath que comprueba todos los costes del grafo de 7 nodos</div>
</td>
</tr>
<tr class="row-color" id="i39">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testMinCostPathNotValid()">testMinCostPathNotValid</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método minCostPath sin las matrices de floyd y con fallos (nodos origen y/o destino no existen)</div>
</td>
</tr>
<tr class="alt-color" id="i40">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testPath7Nodes()">testPath7Nodes</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método path con un grafo de 7 nodos que comprueba todos los caminos posibles</div>
</td>
</tr>
<tr class="row-color" id="i41">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testPathNotValid()">testPathNotValid</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método Path sin las matrices de floyd y con fallos (nodos origen y destino no existen)</div>
</td>
</tr>
<tr class="alt-color" id="i42">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testRecorridoProfundidad7Nodes()">testRecorridoProfundidad7Nodes</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método recorridoProfundidad con un grafo de 7 nodos que comprueba todos los recorridos posibles</div>
</td>
</tr>
<tr class="row-color" id="i43">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testRecorridoProfundidadNotValid()">testRecorridoProfundidadNotValid</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método profundidad con un fallo de prueba (nodo origen no existe)</div>
</td>
</tr>
<tr class="alt-color" id="i44">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testRemoveEdgeEdgeDontExistsNodesExists()">testRemoveEdgeEdgeDontExistsNodesExists</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método removeEdge donde existen los nodos y no la arista</div>
</td>
</tr>
<tr class="row-color" id="i45">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testRemoveEdgeNodesDontExists()">testRemoveEdgeNodesDontExists</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método removeEdge donde no existen los nodos</div>
</td>
</tr>
<tr class="alt-color" id="i46">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testRemoveEdgeNormal()">testRemoveEdgeNormal</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método removeEdge que no tiene errores</div>
</td>
</tr>
<tr class="row-color" id="i47">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testRemoveEdgeSourceDontExists()">testRemoveEdgeSourceDontExists</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método removeEdge donde no existe el nodo origen</div>
</td>
</tr>
<tr class="alt-color" id="i48">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testRemoveEdgeTargetDontExists()">testRemoveEdgeTargetDontExists</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método removeEdge donde no existe el nodo destino</div>
</td>
</tr>
<tr class="row-color" id="i49">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testRemoveNodeDontExists()">testRemoveNodeDontExists</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método removeNode donde el nodo no existe</div>
</td>
</tr>
<tr class="alt-color" id="i50">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testRemoveNodeNormal()">testRemoveNodeNormal</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método removeNode que no tiene errores</div>
</td>
</tr>
<tr class="row-color" id="i51">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testRemoveNodeNotValid()">testRemoveNodeNotValid</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método removeNode donde el nodo no es valido</div>
</td>
</tr>
<tr class="alt-color" id="i52">
<td class="col-first"><code>void</code></td>
<th class="col-second" scope="row"><code><span class="member-name-link"><a href="#testRemoveNodeVarious()">testRemoveNodeVarious</a></span>()</code></th>
<td class="col-last">
<div class="block">Test del método removeNode que no tiene errores y borra toda la matriz</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div class="inherited-list">
<h3 id="methods.inherited.from.class.java.lang.Object">Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></div>
</section>
</li>
</ul>
</section>
<section class="details">
<ul class="details-list">
<!-- ============ FIELD DETAIL =========== -->
<li>
<section class="field-details" id="field.detail">
<h2>Field Details</h2>
<ul class="member-list">
<li>
<section class="detail" id="g">
<h3>g</h3>
<div class="member-signature"><span class="modifiers">private</span>&nbsp;<span class="return-type"><a href="Graph.html" title="class in p2Grafos">Graph</a>&lt;java.lang.Integer&gt;</span>&nbsp;<span class="member-name">g</span></div>
<div class="block">Atributo g</div>
</section>
</li>
<li>
<section class="detail" id="infinite">
<h3>infinite</h3>
<div class="member-signature"><span class="modifiers">private static final</span>&nbsp;<span class="return-type">double</span>&nbsp;<span class="member-name">infinite</span></div>
<div class="block">Constante infinite</div>
<dl class="notes">
<dt>See Also:</dt>
<dd><a href="../constant-values.html#p2Grafos.GraphTests.infinite">Constant Field Values</a></dd>
</dl>
</section>
</li>
</ul>
</section>
</li>
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<li>
<section class="constructor-details" id="constructor.detail">
<h2>Constructor Details</h2>
<ul class="member-list">
<li>
<section class="detail" id="&lt;init&gt;()">
<h3>GraphTests</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="member-name">GraphTests</span>()</div>
</section>
</li>
</ul>
</section>
</li>
<!-- ============ METHOD DETAIL ========== -->
<li>
<section class="method-details" id="method.detail">
<h2>Method Details</h2>
<ul class="member-list">
<li>
<section class="detail" id="testAddNodeFirst()">
<h3>testAddNodeFirst</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testAddNodeFirst</span>()</div>
<div class="block">Test del método addNode sin errores</div>
</section>
</li>
<li>
<section class="detail" id="testAddNodeNotValid()">
<h3>testAddNodeNotValid</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testAddNodeNotValid</span>()</div>
<div class="block">Test del método addNode con nodo no valido</div>
</section>
</li>
<li>
<section class="detail" id="testAddNodeFull()">
<h3>testAddNodeFull</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testAddNodeFull</span>()</div>
<div class="block">Test del método addNode cuando ya esta lleno</div>
</section>
</li>
<li>
<section class="detail" id="testAddNodeAlreadyExists()">
<h3>testAddNodeAlreadyExists</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testAddNodeAlreadyExists</span>()</div>
<div class="block">Test del método addNode cuando ya existe</div>
</section>
</li>
<li>
<section class="detail" id="testGetNodeNormal()">
<h3>testGetNodeNormal</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testGetNodeNormal</span>()</div>
<div class="block">Test del método getNode que devuelve la posición</div>
</section>
</li>
<li>
<section class="detail" id="testGetNodeVarious()">
<h3>testGetNodeVarious</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testGetNodeVarious</span>()</div>
<div class="block">Test del método getNode que devuelve la posición ya añadido</div>
</section>
</li>
<li>
<section class="detail" id="testGetNodeDontExists()">
<h3>testGetNodeDontExists</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testGetNodeDontExists</span>()</div>
<div class="block">Test del método getNode que devuelve -1</div>
</section>
</li>
<li>
<section class="detail" id="testExistsNodeOne()">
<h3>testExistsNodeOne</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testExistsNodeOne</span>()</div>
<div class="block">Test del método existsNode que devuelve true</div>
</section>
</li>
<li>
<section class="detail" id="testExistsNodeVarious()">
<h3>testExistsNodeVarious</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testExistsNodeVarious</span>()</div>
<div class="block">Test del método existsNode que devuelve true</div>
</section>
</li>
<li>
<section class="detail" id="testExistsNodeFalse()">
<h3>testExistsNodeFalse</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testExistsNodeFalse</span>()</div>
<div class="block">Test del método existsNode que devuelve true</div>
</section>
</li>
<li>
<section class="detail" id="testAddEdgeNormal()">
<h3>testAddEdgeNormal</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testAddEdgeNormal</span>()</div>
<div class="block">Test del método addEdge que no tiene errores</div>
</section>
</li>
<li>
<section class="detail" id="testAddEdgeSourceDontExist()">
<h3>testAddEdgeSourceDontExist</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testAddEdgeSourceDontExist</span>()</div>
<div class="block">Test del método addEdge donde no existe el nodo origen</div>
</section>
</li>
<li>
<section class="detail" id="testAddEdgeTargetDontExist()">
<h3>testAddEdgeTargetDontExist</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testAddEdgeTargetDontExist</span>()</div>
<div class="block">Test del método addEdge donde no existe el nodo destino</div>
</section>
</li>
<li>
<section class="detail" id="testAddEdgeEdgeExist()">
<h3>testAddEdgeEdgeExist</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testAddEdgeEdgeExist</span>()</div>
<div class="block">Test del método addEdge donde ya existe la arista</div>
</section>
</li>
<li>
<section class="detail" id="testAddEdgeEdgeWightError()">
<h3>testAddEdgeEdgeWightError</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testAddEdgeEdgeWightError</span>()</div>
<div class="block">Test del método addEdge donde el peso no es valido</div>
</section>
</li>
<li>
<section class="detail" id="testAddEdgeSourceTargetError()">
<h3>testAddEdgeSourceTargetError</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testAddEdgeSourceTargetError</span>()</div>
<div class="block">Test del método addEdge donde no existen los nodos</div>
</section>
</li>
<li>
<section class="detail" id="testAddEdgeEdgeExistsEdgeWeightError()">
<h3>testAddEdgeEdgeExistsEdgeWeightError</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testAddEdgeEdgeExistsEdgeWeightError</span>()</div>
<div class="block">Test del método addEdge donde ya existe la arista y el peso no es valido</div>
</section>
</li>
<li>
<section class="detail" id="testGetEdgeNormal()">
<h3>testGetEdgeNormal</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testGetEdgeNormal</span>()</div>
<div class="block">Test del método getEdge que no tiene errores</div>
</section>
</li>
<li>
<section class="detail" id="testGetEdgeSourceDontExist()">
<h3>testGetEdgeSourceDontExist</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testGetEdgeSourceDontExist</span>()</div>
<div class="block">Test del método getEdge donde no existe el nodo origen</div>
</section>
</li>
<li>
<section class="detail" id="testGetEdgeTargetDontExist()">
<h3>testGetEdgeTargetDontExist</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testGetEdgeTargetDontExist</span>()</div>
<div class="block">Test del método getEdge donde no existe el nodo destino</div>
</section>
</li>
<li>
<section class="detail" id="testGetEdgeEdgeDontExist()">
<h3>testGetEdgeEdgeDontExist</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testGetEdgeEdgeDontExist</span>()</div>
<div class="block">Test del método getEdge donde existen los nodos y no la arista</div>
</section>
</li>
<li>
<section class="detail" id="testGetEdgeBothDontExist()">
<h3>testGetEdgeBothDontExist</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testGetEdgeBothDontExist</span>()</div>
<div class="block">Test del método getEdge donde no existen los nodos</div>
</section>
</li>
<li>
<section class="detail" id="testExistsEdgeNormal()">
<h3>testExistsEdgeNormal</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testExistsEdgeNormal</span>()</div>
<div class="block">Test del método existsEdge que no tiene errores</div>
</section>
</li>
<li>
<section class="detail" id="testExistsEdgeSourceDontExists()">
<h3>testExistsEdgeSourceDontExists</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testExistsEdgeSourceDontExists</span>()</div>
<div class="block">Test del método existsEdge donde no existe el nodo origen</div>
</section>
</li>
<li>
<section class="detail" id="testExistsEdgeTargetDontExists()">
<h3>testExistsEdgeTargetDontExists</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testExistsEdgeTargetDontExists</span>()</div>
<div class="block">Test del método existsEdge donde no existe el nodo destino</div>
</section>
</li>
<li>
<section class="detail" id="testExistsEdgeBothDontExists()">
<h3>testExistsEdgeBothDontExists</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testExistsEdgeBothDontExists</span>()</div>
<div class="block">Test del método existsEdge donde no existen los nodos</div>
</section>
</li>
<li>
<section class="detail" id="testRemoveEdgeNormal()">
<h3>testRemoveEdgeNormal</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testRemoveEdgeNormal</span>()</div>
<div class="block">Test del método removeEdge que no tiene errores</div>
</section>
</li>
<li>
<section class="detail" id="testRemoveEdgeSourceDontExists()">
<h3>testRemoveEdgeSourceDontExists</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testRemoveEdgeSourceDontExists</span>()</div>
<div class="block">Test del método removeEdge donde no existe el nodo origen</div>
</section>
</li>
<li>
<section class="detail" id="testRemoveEdgeTargetDontExists()">
<h3>testRemoveEdgeTargetDontExists</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testRemoveEdgeTargetDontExists</span>()</div>
<div class="block">Test del método removeEdge donde no existe el nodo destino</div>
</section>
</li>
<li>
<section class="detail" id="testRemoveEdgeEdgeDontExistsNodesExists()">
<h3>testRemoveEdgeEdgeDontExistsNodesExists</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testRemoveEdgeEdgeDontExistsNodesExists</span>()</div>
<div class="block">Test del método removeEdge donde existen los nodos y no la arista</div>
</section>
</li>
<li>
<section class="detail" id="testRemoveEdgeNodesDontExists()">
<h3>testRemoveEdgeNodesDontExists</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testRemoveEdgeNodesDontExists</span>()</div>
<div class="block">Test del método removeEdge donde no existen los nodos</div>
</section>
</li>
<li>
<section class="detail" id="testRemoveNodeNormal()">
<h3>testRemoveNodeNormal</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testRemoveNodeNormal</span>()</div>
<div class="block">Test del método removeNode que no tiene errores</div>
</section>
</li>
<li>
<section class="detail" id="testRemoveNodeVarious()">
<h3>testRemoveNodeVarious</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testRemoveNodeVarious</span>()</div>
<div class="block">Test del método removeNode que no tiene errores y borra toda la matriz</div>
</section>
</li>
<li>
<section class="detail" id="testRemoveNodeNotValid()">
<h3>testRemoveNodeNotValid</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testRemoveNodeNotValid</span>()</div>
<div class="block">Test del método removeNode donde el nodo no es valido</div>
</section>
</li>
<li>
<section class="detail" id="testRemoveNodeDontExists()">
<h3>testRemoveNodeDontExists</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testRemoveNodeDontExists</span>()</div>
<div class="block">Test del método removeNode donde el nodo no existe</div>
</section>
</li>
<li>
<section class="detail" id="testDijkstra4Node()">
<h3>testDijkstra4Node</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testDijkstra4Node</span>()</div>
<div class="block">Test del método de Dijkstra con un grafo de 4 nodos</div>
</section>
</li>
<li>
<section class="detail" id="testDijkstra5Node()">
<h3>testDijkstra5Node</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testDijkstra5Node</span>()</div>
<div class="block">Test del método de Dijkstra con un grafo de 5 nodos</div>
</section>
</li>
<li>
<section class="detail" id="testDijkstra6Node()">
<h3>testDijkstra6Node</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testDijkstra6Node</span>()</div>
<div class="block">Test del método de Dijkstra con un grafo de 6 nodos</div>
</section>
</li>
<li>
<section class="detail" id="testDijkstra7Node()">
<h3>testDijkstra7Node</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testDijkstra7Node</span>()</div>
<div class="block">Test del método de Dijkstra con un grafo de 7 nodos</div>
</section>
</li>
<li>
<section class="detail" id="testFloyd4Node()">
<h3>testFloyd4Node</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testFloyd4Node</span>()</div>
<div class="block">Test del método de Floyd con un grafo de 4 nodos</div>
</section>
</li>
<li>
<section class="detail" id="testFloyd5Node()">
<h3>testFloyd5Node</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testFloyd5Node</span>()</div>
<div class="block">Test del método de Floyd con un grafo de 5 nodos</div>
</section>
</li>
<li>
<section class="detail" id="testFloyd6Node()">
<h3>testFloyd6Node</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testFloyd6Node</span>()</div>
<div class="block">Test del método de Floyd con un grafo de 6 nodos</div>
</section>
</li>
<li>
<section class="detail" id="testFloyd7Node()">
<h3>testFloyd7Node</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testFloyd7Node</span>()</div>
<div class="block">Test del método de Floyd con un grafo de 7 nodos</div>
</section>
</li>
<li>
<section class="detail" id="testFloydNoNodes()">
<h3>testFloydNoNodes</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testFloydNoNodes</span>()</div>
<div class="block">Test del método de Floyd con un grafo sin nodos</div>
</section>
</li>
<li>
<section class="detail" id="testMinCostPath7Nodes()">
<h3>testMinCostPath7Nodes</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testMinCostPath7Nodes</span>()</div>
<div class="block">Test del método minCostPath que comprueba todos los costes del grafo de 7 nodos</div>
</section>
</li>
<li>
<section class="detail" id="testMinCostPathNotValid()">
<h3>testMinCostPathNotValid</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testMinCostPathNotValid</span>()</div>
<div class="block">Test del método minCostPath sin las matrices de floyd y con fallos (nodos origen y/o destino no existen)</div>
</section>
</li>
<li>
<section class="detail" id="testPath7Nodes()">
<h3>testPath7Nodes</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testPath7Nodes</span>()</div>
<div class="block">Test del método path con un grafo de 7 nodos que comprueba todos los caminos posibles</div>
</section>
</li>
<li>
<section class="detail" id="testPathNotValid()">
<h3>testPathNotValid</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testPathNotValid</span>()</div>
<div class="block">Test del método Path sin las matrices de floyd y con fallos (nodos origen y destino no existen)</div>
</section>
</li>
<li>
<section class="detail" id="testRecorridoProfundidad7Nodes()">
<h3>testRecorridoProfundidad7Nodes</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testRecorridoProfundidad7Nodes</span>()</div>
<div class="block">Test del método recorridoProfundidad con un grafo de 7 nodos que comprueba todos los recorridos posibles</div>
</section>
</li>
<li>
<section class="detail" id="testRecorridoProfundidadNotValid()">
<h3>testRecorridoProfundidadNotValid</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">testRecorridoProfundidadNotValid</span>()</div>
<div class="block">Test del método profundidad con un fallo de prueba (nodo origen no existe)</div>
</section>
</li>
<li>
<section class="detail" id="basicNodeTest()">
<h3>basicNodeTest</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">basicNodeTest</span>()</div>
<div class="block">Prueba básica de nodos</div>
</section>
</li>
<li>
<section class="detail" id="basicEdgeTest()">
<h3>basicEdgeTest</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">basicEdgeTest</span>()</div>
<div class="block">Prueba básica de aristas</div>
</section>
</li>
<li>
<section class="detail" id="basicEvolutionTest()">
<h3>basicEvolutionTest</h3>
<div class="member-signature"><span class="modifiers">public</span>&nbsp;<span class="return-type">void</span>&nbsp;<span class="member-name">basicEvolutionTest</span>()</div>
<div class="block">Prueba básica de evolucion</div>
</section>
</li>
</ul>
</section>
</li>
</ul>
</section>
<!-- ========= END OF CLASS DATA ========= -->
</main>
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottom-nav" id="navbar.bottom">
<div class="skip-nav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<ul id="navbar.bottom.firstrow" class="nav-list" title="Navigation">
<li><a href="../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="nav-bar-cell1-rev">Class</li>
<li><a href="class-use/GraphTests.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-files/index-1.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="sub-nav">
<div>
<ul class="sub-nav-list">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li><a href="#field.summary">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="sub-nav-list">
<li>Detail:&nbsp;</li>
<li><a href="#field.detail">Field</a>&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
</div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
<span class="skip-nav" id="skip.navbar.bottom">
<!--   -->
</span></nav>
</footer>
</div>
</div>
</body>
</html>
